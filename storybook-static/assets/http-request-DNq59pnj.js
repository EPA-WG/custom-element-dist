const u=(c,e)=>c.getAttribute(e);class o extends HTMLElement{static observedAttributes=["value","slice","url","method","header-accept"];get requestHeaders(){const e={};return[...this.attributes].filter(t=>t.name.startsWith("header-")).map(t=>e[t.name.substring(7)]=t.value),e}get requestProps(){const e={};return[...this.attributes].filter(t=>!t.name.startsWith("header-")).filter(t=>!t.name.startsWith("slice")).map(t=>e[t.name]=t.value),e}disconnectedCallback(){this.#t?.()}connectedCallback(){setTimeout(()=>this.fetch(),0)}#e="";#t=()=>{};async fetch(){if(!this.closest("body"))return;const e=u(this,"url")||"";if(!e)return this.#t?.(),this.value={};if(this.#e===e)return;this.#e=e;const t=new AbortController;this.#t=()=>{t.abort(this.localName+" disconnected"),this.#e=""};const r={...this.requestProps,headers:this.requestHeaders},a={request:r},n=()=>this.dispatchEvent(new Event("change"));this.value=a,n();const h=await fetch(e,{...this.requestProps,signal:t.signal,headers:this.requestHeaders}),i={headers:{}};if([...h.headers].map(([s,l])=>i.headers[s]=l),"ok,status,statusText,type,url,redirected".split(",").map(s=>i[s]=h[s]),a.response=i,n(),i.headers["content-type"]?.includes("json"))try{a.data=await h.json(),n()}catch{}}attributeChangedCallback(e,t,r){e==="url"&&t!==r&&(t&&this.#t?.(),r?setTimeout(()=>this.fetch(),10):(this.value={},setTimeout(()=>this.dispatchEvent(new Event("change")),10)))}}window.customElements.define("http-request",o);
